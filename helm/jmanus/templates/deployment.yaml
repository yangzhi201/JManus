apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jmanus.fullname" . }}
  labels:
    {{- include "jmanus.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "jmanus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jmanus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP
          env:
            # Database configuration
            {{- if eq .Values.app.profile "h2" }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "jmanus.fullname" . }}-secret
                  key: database-username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jmanus.fullname" . }}-secret
                  key: database-password
            {{- else if eq .Values.app.profile "mysql" }}
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.database.mysql.url }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "jmanus.fullname" . }}-secret
                  key: database-username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jmanus.fullname" . }}-secret
                  key: database-password
            {{- else if eq .Values.app.profile "postgres" }}
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.database.postgres.url }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "jmanus.fullname" . }}-secret
                  key: database-username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jmanus.fullname" . }}-secret
                  key: database-password
            {{- end }}
            # Application profile
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.app.profile }},docker"
            # Headless mode for browser automation
            - name: MANUS_BROWSER_HEADLESS
              value: "{{ .Values.app.headless }}"
            # Additional environment variables
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /app/extracted/BOOT-INF/classes/application.yml
              subPath: application.yml
            {{- if eq .Values.app.profile "h2" }}
            - name: config
              mountPath: /app/extracted/BOOT-INF/classes/application-h2.yml
              subPath: application-h2.yml
            {{- else if eq .Values.app.profile "mysql" }}
            - name: config
              mountPath: /app/extracted/BOOT-INF/classes/application-mysql.yml
              subPath: application-mysql.yml
            {{- else if eq .Values.app.profile "postgres" }}
            - name: config
              mountPath: /app/extracted/BOOT-INF/classes/application-postgres.yml
              subPath: application-postgres.yml
            {{- end }}
            - name: config
              mountPath: /app/extracted/BOOT-INF/classes/application-docker.yml
              subPath: application-docker.yml
            - name: logs
              mountPath: /app/logs
            - name: h2-data
              mountPath: /app/h2-data
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/data
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "jmanus.fullname" . }}-config
        - name: logs
          emptyDir: {}
        - name: h2-data
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "jmanus.fullname" . }}
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}