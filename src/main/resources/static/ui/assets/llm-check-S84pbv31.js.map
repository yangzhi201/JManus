{"version":3,"file":"llm-check-S84pbv31.js","sources":["../../src/utils/llm-check.ts"],"sourcesContent":["/*\n * Copyright 2025 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * LLM configuration check utility class\n * Check if model is configured before performing LLM-related operations\n */\nexport class LlmCheckService {\n  private static cachedStatus: { initialized: boolean; lastCheck: number } | null = null\n  private static readonly CACHE_DURATION = 30000 // 30 seconds cache\n\n  /**\n   * Check if LLM is configured\n   */\n  public static async checkLlmConfiguration(): Promise<{ initialized: boolean; message?: string }> {\n    // Check cache\n    const now = Date.now()\n    if (this.cachedStatus && (now - this.cachedStatus.lastCheck) < this.CACHE_DURATION) {\n      return { initialized: this.cachedStatus.initialized }\n    }\n\n    try {\n      const response = await fetch('/api/init/status')\n      if (!response.ok) {\n        throw new Error(`Check failed: ${response.status}`)\n      }\n\n      const result = await response.json()\n      const initialized = result.success && result.initialized\n\n      // Update cache\n      this.cachedStatus = {\n        initialized,\n        lastCheck: now\n      }\n\n      if (!initialized) {\n        return {\n          initialized: false,\n          message: 'System has not configured LLM model yet, please configure API key through initialization page first.'\n        }\n      }\n\n      return { initialized: true }\n    } catch (error) {\n      console.error('[LlmCheckService] Failed to check LLM configuration:', error)\n      return {\n        initialized: false,\n        message: 'Unable to check LLM configuration status, please ensure system is running normally.'\n      }\n    }\n  }\n\n  /**\n   * Ensure LLM is configured, throw error or redirect to initialization page if not configured\n   */\n  public static async ensureLlmConfigured(options?: {\n    showAlert?: boolean\n    redirectToInit?: boolean\n  }): Promise<void> {\n    const { showAlert = true, redirectToInit = true } = options ?? {}\n\n    const checkResult = await this.checkLlmConfiguration()\n\n    if (!checkResult.initialized) {\n      const message = checkResult.message ?? 'Please configure LLM model first'\n\n      if (showAlert) {\n        alert(message)\n      }\n\n      if (redirectToInit) {\n        // Clear initialization status, force redirect to initialization page\n        localStorage.removeItem('hasInitialized')\n        window.location.href = '/ui/#/init'\n        throw new Error('Redirecting to initialization page')\n      }\n\n      throw new Error(message)\n    }\n  }\n\n  /**\n   * Clear cache status\n   */\n  public static clearCache(): void {\n    this.cachedStatus = null\n  }\n\n  /**\n   * Wrap API calls, automatically check LLM configuration before calling\n   */\n  public static async withLlmCheck<T>(\n    apiCall: () => Promise<T>,\n    options?: {\n      showAlert?: boolean\n      redirectToInit?: boolean\n    }\n  ): Promise<T> {\n    await this.ensureLlmConfigured(options)\n    return apiCall()\n  }\n}\n"],"names":["LlmCheckService","now","response","result","initialized","error","options","showAlert","redirectToInit","checkResult","message","apiCall","__publicField"],"mappings":"oKAoBO,MAAMA,CAAgB,CAO3B,aAAoB,uBAA6E,CAEzF,MAAAC,EAAM,KAAK,IAAI,EACrB,GAAI,KAAK,cAAiBA,EAAM,KAAK,aAAa,UAAa,KAAK,eAClE,MAAO,CAAE,YAAa,KAAK,aAAa,WAAY,EAGlD,GAAA,CACI,MAAAC,EAAW,MAAM,MAAM,kBAAkB,EAC3C,GAAA,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,iBAAiBA,EAAS,MAAM,EAAE,EAG9C,MAAAC,EAAS,MAAMD,EAAS,KAAK,EAC7BE,EAAcD,EAAO,SAAWA,EAAO,YAQ7C,OALA,KAAK,aAAe,CAClB,YAAAC,EACA,UAAWH,CACb,EAEKG,EAOE,CAAE,YAAa,EAAK,EANlB,CACL,YAAa,GACb,QAAS,sGACX,QAIKC,EAAO,CACN,eAAA,MAAM,uDAAwDA,CAAK,EACpE,CACL,YAAa,GACb,QAAS,qFACX,CAAA,CACF,CAMF,aAAoB,oBAAoBC,EAGtB,CAChB,KAAM,CAAE,UAAAC,EAAY,GAAM,eAAAC,EAAiB,EAAK,EAAIF,GAAW,CAAC,EAE1DG,EAAc,MAAM,KAAK,sBAAsB,EAEjD,GAAA,CAACA,EAAY,YAAa,CACtB,MAAAC,EAAUD,EAAY,SAAW,mCAMvC,MAJIF,GACF,MAAMG,CAAO,EAGXF,GAEF,aAAa,WAAW,gBAAgB,EACxC,OAAO,SAAS,KAAO,aACjB,IAAI,MAAM,oCAAoC,GAGhD,IAAI,MAAME,CAAO,CAAA,CACzB,CAMF,OAAc,YAAmB,CAC/B,KAAK,aAAe,IAAA,CAMtB,aAAoB,aAClBC,EACAL,EAIY,CACN,aAAA,KAAK,oBAAoBA,CAAO,EAC/BK,EAAQ,CAAA,CAEnB,CA9FEC,EADWZ,EACI,eAAmE,MAClFY,EAFWZ,EAEa,iBAAiB"}